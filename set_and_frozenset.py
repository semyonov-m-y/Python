a = set ("hello") #множество - это по сути список, у которого элементы не могут повторяться, но если повторяются, то выведется лишь один. Элементы выводятся в случайном порядке
print (type(a))
print (a) #{'l', 'o', 'e', 'h'}


b = {'23', 32} #тоже множество, тк разделено запятой, а не двоеточием, как в словаре
print (type(b))
print (b)


c = {i ** 2 for i in range (10)} #тоже множество, выведет i во второй степени случайного числа от 1 до 1
print (type(c))
print (c) #{0, 1, 64, 4, 36, 9, 16, 49, 81, 25}


d = {23} #тоже множество, хотя если бы было просто d = {}, то считалось бы словарем
print (type(d))
print (d)


e = frozenset("Hello") #неизменяемое множество (как кортежи), то есть нельзя использовать например функцию add
print (type(e))
print (e) #frozenset({'H', 'l', 'o', 'e'})


f = ['r', 's', 'w', 'a', 's', 'w']
print (f) #['r', 's', 'w', 'a', 's', 'w']
print (set (f)) #преобразовали в множество {'r', 's', 'a', 'w'}


g = {32, 45, 43.23, 78}
print (len(g)) #выводит количество элементов в множестве - 4
x ={32}
print (x in g) #выясняет пренадлежит ли число множеству, выводит true или false
y = {67, 12, 90}
print (g.isdisjoint (y)) #выясняет совпадает ли хоть один элемент множеств, выводит true или false
z = {34, 45, 90}
print (g == z) #выясняет равны ли все элементы множеств, если не все или не равное количество, то false
g.update(z) #добавляет в g значения из z, которых нет в g - {32, 34, 90, 43.23, 45, 78}
print (g)
g.intersection_update (z) #выясняет какие именно элементы совпадают в двух множествах - {34, 45, 90}
print (g)
g.difference_update (z) #показывает все элементы, которые есть в g и которых нет в z - set() так как нет таких элементов
print (g)
g.symmetric_difference_update (z) #показывает все элементы, которые есть в одном из двух множеств, но нет в другом - {34, 45, 90}
print (g)
g.add (77) #добавляет число во множество - {34, 45, 77, 90}
print (g)
g.remove (34) #удаляет число из множества. Выдает ошибку, если такого элемента нет - {45, 77, 90}
print (g)
g.discard (100) #удаляет число из множества. НЕ выдает ошибку, если такого элемента нет - {45, 77, 90}
print (g)
g.pop () #удаляет первый элемент множества - {77, 90}
print (g)
g.clear () #очищает множество





